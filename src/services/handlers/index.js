const config = require('../../config');
const { log } = require('../../utils');

/**
 * Objeto contendo todos os handlers para op칞칫es do menu
 * @param {Object} whatsappService - Inst칙ncia do servi칞o WhatsApp
 * @param {Object} deepseekService - Inst칙ncia do servi칞o DeepSeek
 * @param {Object} mongoService - Inst칙ncia do servi칞o MongoDB
 */
const createHandlers = (whatsappService, deepseekService, mongoService) => ({
  /**
   * Handle option 1: View schedule
   */
  async handleViewSchedule(msg) {
    log(`Usu치rio ${msg.from.split('@')[0]} solicitou visualiza칞칚o da agenda`, 'info');
    try {
      const dataAtual = new Date().toISOString().split('T')[0]; // YYYY-MM-DD
      const nomeAtendentePadrao = config.appInfo.nomePessoa; // Ou um atendente espec칤fico
      const duracaoServicoPadrao = 30; // minutos

      const availableSlots = await mongoService.getAvailableSlots(dataAtual, nomeAtendentePadrao, duracaoServicoPadrao);

      let responseMessage = `游늰 *Hor치rios dispon칤veis para hoje (${dataAtual}) com ${nomeAtendentePadrao}*:\n\n`;
      if (availableSlots.length > 0) {
        responseMessage += availableSlots.map(slot => `- ${slot}`).join('\n');
      } else {
        responseMessage += "Desculpe, n칚o h치 hor치rios dispon칤veis para hoje com os crit칠rios informados.";
      }
      responseMessage += "\n\nPara ver outros dias ou servi칞os, por favor, especifique.";
      await whatsappService.sendWithTyping(msg.from, responseMessage);

    } catch (error) {
      log(`Erro ao buscar hor치rios dispon칤veis no handler: ${error.message}`, 'error');
      await whatsappService.sendWithTyping(msg.from, "Desculpe, n칚o consegui verificar os hor치rios no momento. Tente novamente mais tarde.");
    }
  },

  /**
   * Handle option 2: Create appointment
   */
  async handleCreateAppointment(msg) {
    const userId = msg.from.split('@')[0];
    log(`Usu치rio ${userId} iniciou agendamento de hor치rio`, 'info');
    
    // Contexto para a IA
    deepseekService.addToConversation(
      msg.from, 
      'system', 
      `O usu치rio deseja agendar um hor치rio. Colete as seguintes informa칞칫es: tipo de servi칞o, data (YYYY-MM-DD), hora de in칤cio (HH:MM), nome do cliente. O nome do atendente ser치 ${config.appInfo.nomePessoa}. Ap칩s coletar, voc칡 me fornecer치 um JSON com esses dados para eu salvar. Exemplo de JSON: {"tipoDeServico": "Corte Masculino", "dataAgendamento": "2025-05-15", "horaInicio": "14:30", "nomeCliente": "Carlos Silva"}. Pergunte uma coisa de cada vez.`
    );
    
    const initialPrompt = "Ol치! Para agendar, qual servi칞o voc칡 gostaria?";
    const response = await deepseekService.processMessage(msg.from, initialPrompt);
    await whatsappService.sendWithTyping(msg.from, response);
    // A IA continuar치 a conversa. Em algum momento, a IA deve retornar um JSON.
    // Voc칡 precisar치 de uma l칩gica no handleWithAI (em whatsapp.js) para detectar esse JSON
    // e ent칚o chamar mongoService.createAppointment.
  },

  /**
   * Handle option 3: Cancel appointment
   */
  async handleCancelAppointment(msg) {
    log(`Usu치rio ${msg.from.split('@')[0]} solicitou cancelamento de hor치rio`, 'info');
    await whatsappService.sendWithTyping(
      msg.from, 
      "Para cancelar seu agendamento, por favor informe a data e hor치rio que estava agendado, e se poss칤vel, o servi칞o."
    );
    // Prepara a IA para a pr칩xima mensagem do usu치rio
    deepseekService.addToConversation(
      msg.from,
      'system',
      'O usu치rio deseja cancelar um agendamento. A pr칩xima mensagem dele conter치 os detalhes. Ap칩s receber, confirme o cancelamento (simulado) e pergunte se pode ajudar com mais algo.'
    );
    // A pr칩xima mensagem do usu치rio ser치 pega pelo handleWithAI em whatsapp.js
  },

  /**
   * Handle option 4: Change appointment
   */
  async handleChangeAppointment(msg) {
    log(`Usu치rio ${msg.from.split('@')[0]} solicitou altera칞칚o de hor치rio`, 'info');
    await whatsappService.sendWithTyping(
      msg.from, 
      "Para alterar seu agendamento, preciso que me informe:\n\n" +
      "1. Data e hor치rio atual do agendamento\n" +
      "2. Nova data e hor치rio desejados"
    );
    // Se for usar IA para esta jornada, adicione um system prompt similar aos outros.
    // Por enquanto, apenas envia a mensagem informativa.
    // Para MVP, pode ser suficiente, ou pode-se adicionar um system prompt para a IA:
    deepseekService.addToConversation(
      msg.from,
      'system',
      'O usu치rio deseja alterar um agendamento. A pr칩xima mensagem dele conter치 os detalhes do agendamento atual e o novo desejado. Ap칩s receber, confirme a altera칞칚o (simulada) e pergunte se pode ajudar com mais algo.'
    );
  },

  /**
   * Handle option 5: View services
   */
  async handleViewServices(msg) {
    log(`Usu치rio ${msg.from.split('@')[0]} solicitou lista de servi칞os`, 'info');
    
    const servicosLista = config.appInfo.servicosRealizados
      .map(servico => `- ${servico}`)
      .join('\n');
      
    await whatsappService.sendWithTyping(
      msg.from, 
      `*Servi칞os Oferecidos*\n\n${servicosLista}\n\nPara agendar um destes servi칞os, selecione a op칞칚o 2 no menu principal.`
    );
  },

  /**
   * Processa a op칞칚o selecionada do menu
   */
  async handleMenuOption(option, msg) {
    const senderNumber = msg.from.split('@')[0];
    
    switch (option) {
      case '1':
        await this.handleViewSchedule(msg);
        break;
      case '2':
        await this.handleCreateAppointment(msg);
        break;
      case '3':
        await this.handleCancelAppointment(msg);
        break;
      case '4':
        await this.handleChangeAppointment(msg);
        break;
      case '5':
        await this.handleViewServices(msg);
        break;
      default:
        log(`Op칞칚o inv치lida recebida de ${senderNumber}: ${option}`, 'warn');
        await whatsappService.sendWithTyping(msg.from, "Op칞칚o inv치lida. Por favor, escolha uma das op칞칫es do menu.");
    }
  }
});

module.exports = createHandlers;